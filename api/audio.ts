import { VercelRequest, VercelResponse } from "@vercel/node";
import ytdl from "ytdl-core";

export default async (req: VercelRequest, res: VercelResponse) => {
  const videoUrl: string = req.query.url as string;

  try {
    const videoInfo = await ytdl.getInfo(videoUrl);
    const videoDescription = videoInfo.videoDetails.description;
    const videoTitle = videoInfo.videoDetails.title;
    const audioFormats = ytdl.filterFormats(videoInfo.formats, "audioonly");

    res.status(200).json({
      audioURL: audioFormats[0].url,
      audioFormat: audioFormats[0].mimeType,
      description:
        videoDescription && removeMetadata(videoDescription, videoTitle),
      videoTitle,
    });
  } catch (error) {
    res.status(500).json({ error: "Error fetching audio formats" });
  }
};

const removeMetadata = (text: string, videoTitle: string): string => {
  // Find the index of the video title in the text
  const titleIndex = text.indexOf(videoTitle);

  // If the title is found, remove the title and the two characters immediately following it
  if (titleIndex !== -1) {
    text = text.substring(titleIndex + videoTitle.length + 2); // Adding 2 for the two characters following the title
  }

  // Define patterns to remove
  const patterns: RegExp[] = [
    /â„— Nippon Columbia Co\., Ltd\.\/NIPPONOPHONE/,
    /Released on: \d{4}-\d{2}-\d{2}/,
    /Auto-generated by YouTube\./,
  ];

  // Iterate over patterns and remove them from the text
  patterns.forEach((pattern) => {
    text = text.replace(pattern, "");
  });

  // Remove the video title
  text = text.replace(videoTitle, "");

  // Remove extra spaces and return the cleaned text
  return text.trim().replace(/\s+/g, " ");
};
